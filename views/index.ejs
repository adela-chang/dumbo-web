<%- include partials/top %>
        <!-- Top content -->
        <div class="top-content">
            <div class="container">
                <div class="row">
                <h1 id="main-banner">Addressing the elephant in the room</h1>
                	<img src="/assets/banner.png">
                    <div class="col-sm-12 text">
	                    <div class="jumbotron">                  
	                    	<!-- Log Screen -->
							<div class="panel panel-info">
							  	<div class="panel-heading">Plugged in and ready to record</div>
							  	<p>current log</p>
							    <pre id="log"></pre>
							</div>	  
							<!-- Make Recordings -->
							<div>
		                    	<div>
		                    		<img class="img-circle" src="/assets/microphone.png">
		                    	</div>
		                        <h2 class="page-header">Start recording</h2>
		                        <button class="btn btn-lg btn-success" onclick="startRecording(this);">
		                        	<i class="fa fa-microphone" aria-hidden="true"></i>  Record
		                        </button>
		                        <button class="btn btn-lg btn-primary" onclick="stopRecording(this);" disabled>
		                        	<i class="fa fa-bar-chart" aria-hidden="true"></i>  Analyze
		                        </button>
	                        </div>

	                        <!-- Analysis -->
							<div class="well">Sentiment Analysis
								<p id="sentiment"></p>
								<div id="gauge-content"></div>
						        	<%-include gauge.html%>
								<ul class="show"></ul>	
							</div>
							<!-- Download -->
							<div>
								<h2>Download your recordings</h2>
								<ul id="recordingslist"></ul>
							</div>
						</div>					

						<!-- Recording script -->
						<script type="text/javascript">
						    function __log(e, data) {
						        log.innerHTML += "\n" + e + " " + (data || '');
						    }
						    
						    var audio_context;
						    var recorder;

						    function startUserMedia(stream) {
						        var input = audio_context.createMediaStreamSource(stream);
						        __log('Media stream created.');
						        // Uncomment if you want the audio to feedback directly
						        //input.connect(audio_context.destination);
						        //__log('Input connected to audio context destination.');

						        recorder = new Recorder(input);
						        __log('Recorder initialised.');
						    }

						    function startRecording(button) {
						        recorder && recorder.record();
						        button.disabled = true;
						        button.nextElementSibling.disabled = false;
						        __log('Recording...');
						    }

						    function stopRecording(button) {
						        recorder && recorder.stop();
						        button.disabled = true;
						        button.previousElementSibling.disabled = false;
						        __log('Stopped recording.');

						        // runs sentiment analysis of audio data blob
						        checkSentiment();
						        recorder.clear();
						    }

						    function checkSentiment() {
						        recorder && recorder.exportWAV(function(blob) {
									var url = URL.createObjectURL(blob);
									var li = document.createElement('li');
									var au = document.createElement('audio');
									var hf = document.createElement('a');

									au.controls = true;
									au.src = url;
									hf.href = url;
									hf.download = new Date().toISOString() + '.wav';
									hf.innerHTML = hf.download;
									li.appendChild(au);
									li.appendChild(hf);
									recordingslist.appendChild(li);

						            console.log(blob)
									$.ajax({
									    type: 'POST',
									    url: 'http://52.90.98.146:9000/send',
									    data: blob,
									    processData: false,
									    contentType: false
									}).done(function(data) {
									       console.log(data);
									       var femaleIn = data.female_in
									       var maleIn = data.male_in
									       var compound = data.sentiment_compound
									       var negative = data.sentiment_neg
									       var neutral = data.sentiment_neu
									       var positive = data.sentiment_pos

									       var show = document.querySelector(".show");
									       var sentiment = document.querySelector("#sentiment");  
									       var child = document.createElement("p");
									       var gauge = document.querySelector(".needle")
									       var degree = compound*100;

									       if (degree > 75){
									       		degree = 75;
									       } else if (degree < -75){
									       		degree = -75
									       }

									       if (compound > 30) {
									       		sentiment.innerHTML = "POSITIVE";
									       		gauge.style.transform = "rotate("+degree+"deg)"
									       		if (maleIn || femaleIn){
									       			child.innerHTML = "Careful, this speech has gendered content."
									       			child.style.color = "red";			
									       		} else {
									       			child.innerHTML = "Your speech does not have gendered content."
									       			child.style.color = "green"
									       		}
										       show.appendChild(child)
									       } else if (compound<-30){
									       		sentiment.innerHTML = "NEGATIVE";
									       		gauge.style.transform = "rotate("+degree+"deg)"
									       		if (maleIn || femaleIn){
									       			child.innerHTML = "Careful, this speech has gendered content."
									       			child.style.color = "red";			
									       		} else {
									       			child.innerHTML = "Your speech does not have gendered content."
									       			child.style.color = "green"
									       		}
										       show.appendChild(child)
									       } else{
									       		sentiment.innerHTML = "NEUTRAL";
									       		gauge.style.transform = "rotate("+degree+"deg)"
									       		if (maleIn || femaleIn){
									       			child.innerHTML = "Careful, this speech has gendered content."
									       			child.style.color = "red";			
									       		} else {
									       			child.innerHTML = "Your speech does not have gendered content."
									       			child.style.color = "green"
									       		}
										       show.appendChild(child);
									       }
									});
						        });
						    }

						    //Setup for Web Audio Recordings
						    window.onload = function init() {
						        try {
						            // webkit shim
						            window.AudioContext = window.AudioContext || window.webkitAudioContext;
						            navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
						            window.URL = window.URL || window.webkitURL;

						            audio_context = new AudioContext;
						            __log('Audio context set up.');
						            __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
						        } catch (e) {
						            alert('No web audio support in this browser!');
						        }

						        navigator.getUserMedia({
						            audio: true
						        }, startUserMedia, function(e) {
						            __log('No live audio input: ' + e);
						        });
						    };
						</script>

<!--                         <div class="container">
                            <div class="row">
                                <div class="col-md-6 col-md-offset-3">
                                    <form action="/viewdetail" method="GET">
                                        <div id="searchbar" class="input-group input-group-lg">
                                            <input type="file" accept="image/*;capture=camera"class="form-control" name="lemonId" placeholder="Go ahead, say something. " required= "true">
                                            <span class="input-group-btn">
                                                <input class="btn btn-success" type="submit" value="Show me the results">
                                            </span>
                                        </div>                   
                                    </form>
                                </div>
                            </div>
                        </div>   -->                   
                        <div class="description">
                        	<p class="medium-paragraph">
                         	Thanks for trying our app!
                        	</p>
                        </div>
                    </div>
                </div>
                
            </div>
        </div>
        <script src="/js/recorder.js"></script>
<%- include partials/bottom %>
